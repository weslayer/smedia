version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: devuser
      POSTGRES_PASSWORD: devpassword
      POSTGRES_DB: socialapp
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  user_service:
    build:
      context: ./services/user_service
      dockerfile: Dockerfile.dev
    volumes:
      - ./services/user_service:/app
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://devuser:devpassword@postgres:5432/socialapp
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
    depends_on:
      - postgres

  post_service:
    build:
      context: ./services/post_service
      dockerfile: Dockerfile.dev
    volumes:
      - ./services/post_service:/app/services/post_service
      - ./shared:/app/shared
    ports:
      - "8001:8000"
    environment:
      - DATABASE_URL=postgresql://devuser:devpassword@postgres:5432/socialapp
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_REGION=${AWS_REGION}
      - AWS_BUCKET_NAME=${AWS_BUCKET_NAME}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
    depends_on:
      - postgres

  comment_service:
    build:
      context: ./services/comment_service
      dockerfile: Dockerfile.dev
    volumes:
      - ./services/comment_service:/app/services/comment_service
      - ./shared:/app/shared
    ports:
      - "8002:8000"
    environment:
      - DATABASE_URL=postgresql://devuser:devpassword@postgres:5432/socialapp
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
    depends_on:
      - postgres

  analytics_service:
    build:
      context: ./services/analytics_service
      dockerfile: Dockerfile.dev
    volumes:
      - ./services/analytics_service:/app
      - ./shared:/app/shared
    ports:
      - "8003:8000"
    environment:
      - DATABASE_URL=postgresql://devuser:devpassword@postgres:5432/socialapp
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
    depends_on:
      - postgres

  prometheus:
    image: prom/prometheus:v2.45.0
    volumes:
      - ./services/analytics_service/prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - "9090:9090"
    depends_on:
      - analytics_service

  grafana:
    image: grafana/grafana:10.0.3
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    ports:
      - "3000:3000"
    depends_on:
      - prometheus

volumes:
  postgres_data:
  prometheus_data:
  grafana_data: 